# Dockerfile.backend

FROM node:18-alpine

# 1. Instala dependências de build e runtime
#    ADICIONADO: sqlite-dev para os headers C do SQLite
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    sqlite \
    sqlite-dev \
    py3-pip

# 2. Configura ambiente para node-gyp (se necessário, mas npm geralmente lida com isso)
ENV npm_config_python=/usr/bin/python3 

WORKDIR /app

# 3. Copia apenas package.json primeiro para cache de dependências
COPY ./backend/package*.json ./

# 4. Instala dependências com flags específicas para SQLite
#    --build-from-source garante que ele compile usando as libs do Alpine
#    --sqlite=/usr aponta para onde o sqlite-dev instalou as libs/headers
#    --python=/usr/bin/python3 especifica a versão correta do python
RUN npm install --build-from-source \
    --sqlite_libname=sqlite3 \
    --sqlite=/usr \
    --python=/usr/bin/python3

# 5. Copia o restante da aplicação DEPOIS do npm install
COPY ./backend .

EXPOSE 3000
CMD ["node", "server.js"]